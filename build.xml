<project name="zm-soap" default="jar" xmlns:ivy="antlib:org.apache.ivy.ant">

  <import file="../zm-zcs/ant-global.xml"/>

  <!-- Properties -->
  <property name="jar.file" value="zimbrasoap.jar"/>
  <property name="metro.jars.dir" location="jars/metro"/>
  <property name="xml.schema.dir" location="${build.classes.dir}/com/zimbra/soap"/>

  <!-- implementation.title is used by the "zimbra-jar" target -->
  <property name="implementation.title" value="Zimbra Soap"/>

  <!-- START ZimbraSoapDocs Properties -->
  <property name="zimbra.service.wsdl.file" location="${build.classes.dir}/com/zimbra/soap/ZimbraService.wsdl"/>
  <property name="soapdocs.templates.dir" location="soapdocs/templates"/>
  <property name="soapdocs.output.dir" location="${build.dir}/docs/soap"/>
  <property name="soapdocs.src.dir" location="soapdocs/src/java"/>
  <property name="soapdocs.classes.dir" location="${build.dir}/soap-doc-classes"/>
  <property name="soapdocs.jar" location="soapdocs/jars/ZmApiDoclet.jar"/>
  <property name="soapdocs.apidesc.file" location="${build.dir}/soapapi-desc.json"/>
  <property name="soapdocs.apidesc.baseline.file" location="soapdocs/baseline-soapapi-desc.json.gz"/>
  <property name="soapapi.changelog.output.dir" location="${soapdocs.output.dir}/api-changelog"/>
  <property name="soapapi.doc.file" location="${build.dir}/docs/soapapi-zimbra-doc.zip"/>
  <property name="soapapi.changelog.file" location="${build.dir}/docs/soapapi-changelog.zip"/>
  <property name="soapdocs.test.dir" location="${build.dir}/soapdocs-test"/>
  <property name="soapdocs.test.src.dir" location="soapdocs/src/java-test"/>
  <property name="soapdocs.test.classes.dir" location="${build.dir}/soapdocs-test-classes"/>
  <!-- END   ZimbraSoapDocs Properties -->

  <path id="soapdocs.class.path">
    <path refid="test.class.path"/>
    <pathelement location="${soapdocs.classes.dir}"/>
    <fileset dir="${common.jars.dir}">
      <include name="**/freemarker*.jar"/>
      <include name="**/commons-lang-*.jar"/>
      <include name="**/commons-cli-*.jar"/>
    </fileset>
    <!-- A hack that finds tools.jar on Mac OS X Mountain Lion/Java 7.  May not work elsewhere -->
    <fileset dir="${java.home}/..">
      <include name="**/tools.jar"/>
    </fileset>
  </path>

  <path id="soapdocs.doclet.class.path">
    <path refid="jaxws.classpath"/>
    <fileset file="soapdocs.jar"/>
    <fileset dir="soapdocs/jars">
      <include name="**/*.jar"/>
    </fileset>
    <pathelement location="${build.classes.dir}"/>
    <pathelement location="${common.classes.dir}"/>
    <fileset dir="${common.jars.dir}">
      <include name="log4j*.jar"/>
      <include name="dom4j*.jar"/>
      <include name="jackson*.jar"/>
      <include name="guava*.jar"/>
      <include name="**/commons-lang-*.jar"/>
      <include name="**/freemarker*.jar"/>
    </fileset>
  </path>

  <!-- Targets -->
  <target name="jar" depends="compile,zimbra-jar" description="Creates the jar"/>

  <target name="check-zimbra-identity">
    <available file="/opt/zimbra/.ssh/zimbra_identity" property="ssh.zimbra.identity.present"/>
  </target>

  <target name="zimbra-identity" depends="check-zimbra-identity" unless="ssh.zimbra.identity.present">
    <exec failonerror="true" executable="/opt/zimbra/bin/zmsshkeygen"/>
  </target>

  <!-- Use Mac OS X (Snow Leopard/Lion) or, if using another platform, resolve classpath issues related to
       usage of the doclet API.
       Doclet API classes are normally packaged in tools.jar - but Mac OS X does it differently. -->
  <target name="soap-api-doc-compile" depends="compile">
    <mkdir dir="${soapdocs.classes.dir}"/>
    <javac srcdir="${soapdocs.src.dir}" destdir="${soapdocs.classes.dir}" debug="true" classpathref="soapdocs.class.path" target="${javac.target}"/>
    <echo>"If soap-api-doc source has changed, execute task 'soap-api-doc-jar' and checkin the new jar"</echo>
  </target>

  <!-- Packages up a jar for use from generate-soap-api-doc -->
  <target name="soap-api-doc-jar" depends="soap-api-doc-compile">
    <delete file="${soapdocs.jar}" quiet="true"/>
    <jar destfile="${soapdocs.jar}" basedir="${soapdocs.classes.dir}"/>
  </target>

  <!-- The javadoc task must have resolved any doclet API usage classpath related issues in order to run.
       so this task should execute successfully on any platform  -->
  <target name="generate-soap-api-doc" depends="compile">
    <delete dir="${soapdocs.output.dir}" quiet="true"/>
    <mkdir dir="${soapdocs.output.dir}"/>
    <javadoc doclet="com.zimbra.doc.soap.doclet.ZmApiDoclet" access="private" docletpathref="soapdocs.doclet.class.path" classpathref="soapdocs.doclet.class.path">
      <doclet name="com.zimbra.doc.soap.doclet.ZmApiDoclet">
        <param name="--templates-dir" value="${soapdocs.templates.dir}"/>
        <param name="--output-dir" value="${soapdocs.output.dir}"/>
        <param name="--apidesc-json" value="${soapdocs.apidesc.file}"/>
        <param name="--build-version" value="${zimbra.buildinfo.version}"/>
        <param name="--build-date" value="${zimbra.buildinfo.date}"/>
      </doclet>
      <packageset dir="${src.java.dir}" defaultexcludes="yes">
        <include name="com/zimbra/soap/*/message/**"/>
        <include name="com/zimbra/soap/*/type/**"/>
        <include name="com/zimbra/soap/base/**"/>
        <include name="com/zimbra/soap/header/**"/>
        <include name="com/zimbra/soap/type/**"/>
      </packageset>
    </javadoc>
  </target>

  <target name="package-soap-api-doc" depends="generate-soap-api-doc">
    <zip destfile="${soapapi.doc.file}" basedir="${soapdocs.output.dir}">
      <include name="api-reference/**"/>
    </zip>
  </target>

  <target name="generate-soap-api-changelog" depends="generate-soap-api-doc,soap-api-doc-compile">
    <delete dir="${soapapi.changelog.output.dir}" quiet="true"/>
    <mkdir dir="${soapapi.changelog.output.dir}"/>
    <copy todir="${soapapi.changelog.output.dir}">
      <fileset dir="${soapdocs.templates.dir}/changelog">
        <exclude name="**/*.ftl"/>
      </fileset>
    </copy>
    <java classname="com.zimbra.doc.soap.changelog.SoapApiChangeLog" classpathref="soapdocs.class.path" fork="true" failonerror="true">
      <arg line="--output-dir ${soapapi.changelog.output.dir}"/>
      <arg line="--templates-dir ${soapdocs.templates.dir}"/>
      <arg line="--baseline-apidesc ${soapdocs.apidesc.baseline.file}"/>
      <arg line="--current-apidesc ${soapdocs.apidesc.file}"/>
    </java>
  </target>

  <target name="package-soap-api-changelog" depends="generate-soap-api-changelog">
    <zip destfile="${soapapi.changelog.file}" basedir="${soapdocs.output.dir}">
      <include name="api-changelog/**"/>
    </zip>
  </target>

  <target name="update-baseline-apidesc" depends="generate-soap-api-doc" description="Update the baseline description of the SOAP API used by target generate-soap-api-changelog">
    <gzip src="${soapdocs.apidesc.file}" destfile="${soapdocs.apidesc.baseline.file}"/>
  </target>

  <target name="soapdocs-test-compile" depends="soap-api-doc-compile">
    <mkdir dir="${soapdocs.test.classes.dir}"/>
    <javac srcdir="${soapdocs.test.src.dir}" destdir="${soapdocs.test.classes.dir}" debug="true" classpathref="soapdocs.class.path" target="${javac.target}"/>
    <copy todir="${soapdocs.test.classes.dir}">
      <fileset dir="${soapdocs.test.src.dir}" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="soapdocs-test" depends="soapdocs-test-compile" description="Run soapdocs unit tests">
    <delete dir="${soapdocs.test.dir}" quiet="true"/>
    <mkdir dir="${soapdocs.test.dir}/output"/>
    <mkdir dir="${soapdocs.test.dir}/report"/>
    <junit printsummary="on" fork="yes" forkmode="once" failureproperty="soapdocs.junit.failure" tempdir="${soapdocs.test.dir}">
      <classpath refid="soapdocs.class.path"/>
      <classpath path="${soapdocs.test.classes.dir}"/>
      <assertions>
        <enable/>
      </assertions>
      <formatter type="xml"/>
      <batchtest todir="${soapdocs.test.dir}/output">
        <fileset dir="${soapdocs.test.src.dir}">
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>
    </junit>
    <junitreport todir="${soapdocs.test.dir}/report">
      <fileset dir="${soapdocs.test.dir}/output"/>
      <report todir="${soapdocs.test.dir}/report"/>
    </junitreport>
    <echo>SOAPDOCS Test Report: ${soapdocs.test.dir}/report/index.html</echo>
    <fail if="soapdocs.junit.failure" message="SOAPDOCS Unit test failed"/>
  </target>

</project>
